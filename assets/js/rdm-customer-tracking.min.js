let map,restaurantMarker,customerMarker,agentMarker,deliveryRoute;let updateTimer;let isUpdating = false;let consecutiveErrors = 0;function initTrackingMap(){if(!window.rdmTrackingData || !window.rdmTrackingData.locations){console.error('Tracking data not found');document.getElementById('rdm-tracking-map').innerHTML = '<div class="rdm-map-error">Map data not available</div>';return;}const restaurant ={lat:parseFloat(window.rdmTrackingData.locations.restaurant.lat),lng:parseFloat(window.rdmTrackingData.locations.restaurant.lng)};const customer ={lat:parseFloat(window.rdmTrackingData.locations.customer.lat),lng:parseFloat(window.rdmTrackingData.locations.customer.lng)};const center ={lat:(restaurant.lat + customer.lat)/ 2,lng:(restaurant.lng + customer.lng)/ 2};map = new google.maps.Map(document.getElementById('rdm-tracking-map'),{zoom:13,center:center,mapTypeId:google.maps.MapTypeId.ROADMAP,disableDefaultUI:true,zoomControl:true,mapTypeControl:false,streetViewControl:false,fullscreenControl:true,styles:[{featureType:'poi',elementType:'labels',stylers:[{visibility:'off'}]}]});restaurantMarker = new google.maps.Marker({position:restaurant,map:map,icon:{url:window.rdmMapsConfig ? window.rdmMapsConfig.markerIcons.restaurant:getDefaultMarkerIcon('restaurant'),scaledSize:new google.maps.Size(40,40),anchor:new google.maps.Point(20,40)},title:window.rdmTrackingData.locations.restaurant.name});const restaurantInfoWindow = new google.maps.InfoWindow({content:`<div class="rdm-info-window"> <h4>${window.rdmTrackingData.locations.restaurant.name}</h4> <p>${window.rdmTrackingData.locations.restaurant.address}</p> </div>`});restaurantMarker.addListener('click',()=>{closeAllInfoWindows();restaurantInfoWindow.open(map,restaurantMarker);});customerMarker = new google.maps.Marker({position:customer,map:map,icon:{url:window.rdmMapsConfig ? window.rdmMapsConfig.markerIcons.customer:getDefaultMarkerIcon('customer'),scaledSize:new google.maps.Size(40,40),anchor:new google.maps.Point(20,40)},title:window.rdmTrackingData.locations.customer.address});const customerInfoWindow = new google.maps.InfoWindow({content:`<div class="rdm-info-window"> <h4>Delivery Address</h4> <p>${window.rdmTrackingData.locations.customer.address}</p> </div>`});customerMarker.addListener('click',()=>{closeAllInfoWindows();customerInfoWindow.open(map,customerMarker);});if(window.rdmTrackingData.locations.agent){createAgentMarker();}fitMapBounds();startTrackingUpdates();}function createAgentMarker(){const agent ={lat:parseFloat(window.rdmTrackingData.locations.agent.lat),lng:parseFloat(window.rdmTrackingData.locations.agent.lng)};agentMarker = new google.maps.Marker({position:agent,map:map,icon:{url:window.rdmMapsConfig ? window.rdmMapsConfig.markerIcons.agent:getDefaultMarkerIcon('agent'),scaledSize:new google.maps.Size(40,40),anchor:new google.maps.Point(20,40)},title:window.rdmTrackingData.locations.agent.name,animation:google.maps.Animation.BOUNCE});const agentInfoWindow = new google.maps.InfoWindow({content:`<div class="rdm-info-window"> <h4>${window.rdmTrackingData.locations.agent.name}</h4> <p>Delivery Agent</p> <p><small>Last updated:${formatLastUpdate(window.rdmTrackingData.locations.agent.last_update)}</small></p> </div>`});agentMarker.addListener('click',()=>{closeAllInfoWindows();agentInfoWindow.open(map,agentMarker);});setTimeout(()=>{if(agentMarker){agentMarker.setAnimation(null);}},3000);drawDeliveryRoute(agent);}function closeAllInfoWindows(){if(window.openInfoWindows){window.openInfoWindows.forEach(infoWindow => infoWindow.close());}}function fitMapBounds(){const bounds = new google.maps.LatLngBounds();bounds.extend(restaurantMarker.getPosition());bounds.extend(customerMarker.getPosition());if(agentMarker)bounds.extend(agentMarker.getPosition());map.fitBounds(bounds);google.maps.event.addListenerOnce(map,'bounds_changed',()=>{if(map.getZoom()> 15){map.setZoom(15);}});}function drawDeliveryRoute(agentPosition){if(deliveryRoute){deliveryRoute.setMap(null);}const directionsService = new google.maps.DirectionsService();const directionsRenderer = new google.maps.DirectionsRenderer({map:map,suppressMarkers:true,polylineOptions:{strokeColor:'#FF5722',strokeWeight:5,strokeOpacity:0.7}});directionsService.route({origin:agentPosition,destination:customerMarker.getPosition(),travelMode:google.maps.TravelMode.DRIVING,avoidHighways:false,avoidTolls:false},(response,status)=>{if(status === 'OK'){directionsRenderer.setDirections(response);deliveryRoute = directionsRenderer;if(response.routes[0] && response.routes[0].legs[0]){const duration = response.routes[0].legs[0].duration.text;const distance = response.routes[0].legs[0].distance.text;updateETADisplay(duration,distance);}}else{console.warn('Directions request failed due to ' + status);showStraightLineRoute(agentPosition);}});}function showStraightLineRoute(agentPosition){const routePath = new google.maps.Polyline({path:[agentPosition,customerMarker.getPosition()],geodesic:true,strokeColor:'#FF5722',strokeOpacity:0.5,strokeWeight:3,map:map});}function startTrackingUpdates(){updateTrackingData();const refreshInterval = parseInt(window.rdmTrackingData.refresh_interval)|| 30;updateTimer = setInterval(updateTrackingData,refreshInterval * 1000);}function updateTrackingData(){if(isUpdating){return;}isUpdating = true;let nonce = '';if(window.rdmParams && window.rdmParams.nonce){nonce = window.rdmParams.nonce;}else if(window.rdmTrackingData && window.rdmTrackingData.nonce){nonce = window.rdmTrackingData.nonce;}const formData = new FormData();formData.append('action','rdm_get_order_status');formData.append('order_id',window.rdmTrackingData.order.id);formData.append('tracking_key',window.rdmTrackingData.tracking_key);formData.append('security',nonce);setLoadingState(true);fetch(window.rdmParams.ajax_url,{method:'POST',credentials:'same-origin',body:formData}).then(response =>{if(!response.ok){throw new Error(`HTTP error! status:${response.status}`);}return response.json();}).then(data =>{if(data.success){updateInterface(data.data);updateLastRefreshTime();consecutiveErrors = 0;hideErrorMessage();}else{console.error('Error updating tracking data:',data.data ? data.data.message:'Unknown error');handleUpdateError(data.data ? data.data.message:'Failed to update tracking information');}}).catch(error =>{console.error('Failed to update tracking data:',error);handleUpdateError('Connection error. Please check your internet connection.');}).finally(()=>{isUpdating = false;setLoadingState(false);});}function handleUpdateError(message){consecutiveErrors++;showErrorMessage(message);if(consecutiveErrors >= 3){const newInterval = Math.min(300,30 * Math.pow(2,consecutiveErrors - 3));clearInterval(updateTimer);updateTimer = setInterval(updateTrackingData,newInterval * 1000);showErrorMessage(`Connection issues detected. Update interval increased to ${newInterval}seconds.`);}}function setLoadingState(loading){const refreshButton = document.getElementById('rdm-refresh-button');if(refreshButton){if(loading){refreshButton.classList.add('loading');refreshButton.disabled = true;}else{refreshButton.classList.remove('loading','spinning');refreshButton.disabled = false;}}}function updateInterface(newData){if(newData.order.status !== window.rdmTrackingData.order.status){window.rdmTrackingData.order.status = newData.order.status;updateStatusTimeline(newData.status_timeline);showStatusNotification(newData.order.status_name);}if(newData.locations.agent){const newAgentPos ={lat:parseFloat(newData.locations.agent.lat),lng:parseFloat(newData.locations.agent.lng)};if(!agentMarker){window.rdmTrackingData.locations.agent = newData.locations.agent;createAgentMarker();fitMapBounds();}else{animateMarker(agentMarker,newAgentPos);}if(newData.order.status === 'out-for-delivery'){drawDeliveryRoute(newAgentPos);}window.rdmTrackingData.locations.agent = newData.locations.agent;}if(newData.order.estimated_delivery !== window.rdmTrackingData.order.estimated_delivery){window.rdmTrackingData.order.estimated_delivery = newData.order.estimated_delivery;const etaElement = document.getElementById('rdm-eta-time');if(etaElement){etaElement.textContent = newData.order.estimated_delivery;etaElement.classList.add('updated');setTimeout(()=> etaElement.classList.remove('updated'),1000);}}}function animateMarker(marker,newPosition){const numDeltas = 10;const delay = 100;let i = 0;let deltaLat,deltaLng;const currentPosition = marker.getPosition();deltaLat =(newPosition.lat - currentPosition.lat())/ numDeltas;deltaLng =(newPosition.lng - currentPosition.lng())/ numDeltas;function moveMarker(){i++;const lat = currentPosition.lat()+(deltaLat * i);const lng = currentPosition.lng()+(deltaLng * i);const latlng = new google.maps.LatLng(lat,lng);marker.setPosition(latlng);if(i < numDeltas){setTimeout(moveMarker,delay);}}moveMarker();}function updateStatusTimeline(newTimeline){const timelineContainer = document.getElementById('rdm-status-timeline');if(!timelineContainer)return;newTimeline.forEach((step,index)=>{const stepElement = document.getElementById(`rdm-status-${step.status}`);if(stepElement){if(step.completed && !stepElement.classList.contains('completed')){stepElement.classList.add('completed');stepElement.querySelector('.rdm-step-time').textContent = step.time;stepElement.style.animation = 'rdm-step-complete 0.5s ease-in-out';setTimeout(()=>{stepElement.style.animation = '';},500);}}});}function updateETADisplay(duration,distance){const etaElement = document.getElementById('rdm-eta-time');const distanceElement = document.getElementById('rdm-distance');if(etaElement){etaElement.textContent = duration;}if(distanceElement){distanceElement.textContent = distance;}}function showStatusNotification(statusName){const notification = document.createElement('div');notification.className = 'rdm-status-notification';notification.textContent = `Order status updated:${statusName}`;document.body.appendChild(notification);setTimeout(()=>{notification.remove();},3000);}function showErrorMessage(message){const errorElement = document.getElementById('rdm-error-message');if(errorElement){errorElement.textContent = message;errorElement.classList.remove('rdm-hidden');errorElement.style.display = 'block';errorElement.onclick =()=>{hideErrorMessage();};if(!message.includes('Connection issues detected')){setTimeout(()=>{hideErrorMessage();},10000);}}}function hideErrorMessage(){const errorElement = document.getElementById('rdm-error-message');if(errorElement){errorElement.style.display = 'none';errorElement.classList.add('rdm-hidden');errorElement.onclick = null;}}function updateLastRefreshTime(){const lastUpdateElement = document.getElementById('rdm-last-update');if(lastUpdateElement){const now = new Date();lastUpdateElement.textContent = `Last updated:${now.toLocaleTimeString()}`;}}function formatLastUpdate(timestamp){if(!timestamp)return 'Unknown';const date = new Date(timestamp);const now = new Date();const diffMinutes = Math.floor((now - date)/(1000 * 60));if(diffMinutes < 1){return 'Just now';}else if(diffMinutes < 60){return `${diffMinutes}minutes ago`;}else{return date.toLocaleTimeString();}}function getDefaultMarkerIcon(type){const colors ={restaurant:'#FF5722',customer:'#2196F3',agent:'#4CAF50'};const color = colors[type] || '#666666';return `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(` <svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"> <circle cx="20" cy="20" r="15" fill="${color}" stroke="#ffffff" stroke-width="3"/> <circle cx="20" cy="20" r="5" fill="#ffffff"/> </svg> `)}`;}document.addEventListener('DOMContentLoaded',function(){window.rdmInitMap = initTrackingMap;const refreshButton = document.getElementById('rdm-refresh-button');if(refreshButton){refreshButton.addEventListener('click',function(){updateTrackingData();this.classList.add('spinning');setTimeout(()=>{this.classList.remove('spinning');},1000);});}const callButton = document.querySelector('.rdm-call-agent');if(callButton){callButton.addEventListener('click',function(e){if(typeof gtag !== 'undefined'){gtag('event','call_agent',{event_category:'engagement',event_label:'order_tracking'});}});}const trackingForm = document.getElementById('rdm-tracking-form');if(trackingForm){const firstInput = trackingForm.querySelector('input[type="number"]');if(firstInput){firstInput.focus();}trackingForm.addEventListener('submit',function(e){const orderIdInput = this.querySelector('#order_id');const trackingKeyInput = this.querySelector('#tracking_key');if(!orderIdInput.value || !trackingKeyInput.value){e.preventDefault();showErrorMessage('Please enter both order number and tracking key.');return false;}const submitButton = this.querySelector('.rdm-track-button');if(submitButton){submitButton.textContent = 'Tracking...';submitButton.disabled = true;}});}monitorConnectionStatus();window.addEventListener('beforeunload',function(){if(updateTimer){clearInterval(updateTimer);}});if(typeof google !== 'undefined' && google.maps){initTrackingMap();}document.addEventListener('keydown',function(e){if(e.key === 'r' && !e.target.matches('input,textarea')&& !e.ctrlKey && !e.metaKey){e.preventDefault();updateTrackingData();}if(e.key === 'Escape'){hideErrorMessage();}});});function monitorConnectionStatus(){const createStatusIndicator =()=>{const indicator = document.createElement('div');indicator.id = 'rdm-connection-status';indicator.className = 'rdm-connection-status';document.body.appendChild(indicator);return indicator;};let statusIndicator = document.getElementById('rdm-connection-status')|| createStatusIndicator();const updateStatus =(isOnline)=>{if(isOnline){statusIndicator.className = 'rdm-connection-status online';statusIndicator.textContent = '🟢 Online';setTimeout(()=>{statusIndicator.style.display = 'none';},3000);}else{statusIndicator.className = 'rdm-connection-status offline';statusIndicator.textContent = '🔴 Offline';statusIndicator.style.display = 'block';}};updateStatus(navigator.onLine);window.addEventListener('online',()=>{updateStatus(true);if(window.rdmTrackingData && !updateTimer){startTrackingUpdates();}});window.addEventListener('offline',()=>{updateStatus(false);if(updateTimer){clearInterval(updateTimer);updateTimer = null;}});}window.gm_authFailure = function(){console.error('Google Maps API authentication failed');const mapContainer = document.getElementById('rdm-tracking-map');if(mapContainer){mapContainer.innerHTML = ` <div class="rdm-map-error"> <div style="text-align:center;padding:40px;"> <div style="font-size:48px;margin-bottom:20px;">🗺️</div> <div style="font-weight:500;margin-bottom:10px;font-size:18px;"> Map Service Temporarily Unavailable </div> <div style="font-size:14px;color:#666;margin-bottom:15px;"> The mapping service is currently experiencing issues. Please check the status timeline above for order updates. </div> <button onclick="location.reload()" style=" background:var(--rdm-primary-color);color:white;border:none;padding:10px 20px;border-radius:5px;cursor:pointer;font-size:14px;"> Try Again </button> </div> </div> `;}};window.addEventListener('error',function(e){if(e.filename && e.filename.includes('maps.googleapis.com')){console.error('Google Maps failed to load:',e.error);window.gm_authFailure();}});if(typeof module !== 'undefined' && module.exports){module.exports ={initTrackingMap,updateTrackingData,formatLastUpdate,showErrorMessage,hideErrorMessage};}